{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,2EAA2E,SAAS,sFAAsF,sBAAsB,2aAA2a,YAAY,kHAAkH,YAAY,8CAA8C,+CAA+C,cAAc,mB;;;;;;;;;;;;;;;;;;;;;ACAtzB;AAO1C;IALA;QAME,UAAK,GAAG,SAAS,CAAC;QAClB,kBAAa,GAAG,CAAC,CAAC;QAClB,aAAQ,GAAG,iBAAiB,CAAC;QAC7B,aAAQ,GAAG,iBAAiB,CAAC;QAC7B,YAAO,GAAG,IAAI,CAAC;QAEf,UAAK,GAAG;YACN,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO;SACvC;QACD,WAAM,GAAG;YACP,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ;YACjD,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;YAC3C,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;YAC7C,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;SAC9C;IAeH,CAAC;IAdC,uCAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IACD,kCAAW,GAAX;QACE,IAAG,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE;YACzB,IAAI,CAAC,aAAa,EAAG,CAAC;SACvB;IACH,CAAC;IACD,2BAAI,GAAJ,UAAK,KAAK;QACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;IACrC,CAAC;IACD,yCAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;IAC/C,CAAC;IA7BU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;OACW,YAAY,CA8BxB;IAAD,mBAAC;CAAA;AA9BwB;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEM;AAY/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACftB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <h1 style=\\\"text-align:center\\\">\\n      Hello {{ title }}!\\n  </h1>\\n</div>\\n<div>\\n  <h2 style=\\\"text-align:center\\\">\\n      Available Room {{ getAvailableRoom() }}\\n  </h2>\\n</div>\\n<br>\\n<div style=\\\"text-align:center\\\">\\n    <input type=\\\"number\\\" (input)=\\\"availableRoom = $event.target.value\\\" bind-value=\\\"getAvailableRoom()\\\"/>\\n</div>\\n<br>\\n<div style=\\\"text-align:center\\\">\\n  <button (click)=\\\"reserveRoom()\\\" [disabled]=\\\"checkAvailableRoom()\\\">Reserve A Room </button>\\n</div>\\n<br>\\n<div style=\\\"text-align:center\\\">\\n  <input type=\\\"text\\\" (input)=\\\"show($event)\\\"/>\\n  <h4>{{ showName }}</h4>\\n</div>\\n\\n<div style=\\\"text-align:center\\\">\\n  <input (input)=\\\"username = $event.target.value\\\">\\n  <h4>{{ username }}</h4>\\n</div>\\n<div style=\\\"text-align:center;\\\">\\n  <p [ngStyle]=\\\"styles\\\">\\n    Welcome {{ guest.text }}\\n  </p>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'welcome-guest',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = \"Angular\";\n  availableRoom = 5;\n  username = \"input your name\";\n  showName = \"input your name\";\n  isAdmin = true;\n  \n  guest = {\n    text: this.isAdmin ? \"Admin\" : \"Guest\",\n  }\n  styles = {\n    'font-family': this.isAdmin ? \"italic\" : \"normal\",\n    'font-size': this.isAdmin ? \"24px\" : \"16px\",\n    'font-weight': this.isAdmin ? \"200px\" : \"0px\",\n    'color': this.isAdmin ? \"#111111\" : \"#4af767\"\n  }\n  getAvailableRoom() {\n    return this.availableRoom;\n  }\n  reserveRoom() {\n    if(this.availableRoom > 0) {\n      this.availableRoom --;\n    }\n  }\n  show(event) {\n    this.showName = event.target.value;\n  }\n  checkAvailableRoom() {\n    return this.availableRoom == 0 ? true : false\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}